{
  "openapi": "3.0.0",
  "info": {
    "title": "price microservice",
    "description": "Marcoo microservices",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:{port}",
      "description": "Local server",
      "variables": {
        "port": {
          "default": "8082"
        }
      }
    },
    {
      "url": "https://marcoo-price.herokuapp.com/",
      "description": "(Internal) Production server"
    }
  ],
  "tags": [
    {
      "name": "API",
      "description": "Microservice endpoints"
    },
    {
      "name": "Health check",
      "description": "Service health check"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Check service health",
        "tags": [
          "Health check"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/prices": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "",
                  "minItems": 1,
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "required": [
                      "_id",
                      "id_product",
                      "id_supermarket",
                      "price",
                      "date"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "minLength": 1
                      },
                      "id_product": {
                        "type": "string",
                        "minLength": 1
                      },
                      "id_supermarket": {
                        "type": "string",
                        "minLength": 1
                      },
                      "price": {
                        "type": "number"
                      },
                      "date": {
                        "type": "string",
                        "minLength": 1
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": [
                      {
                        "_id": "6095a5064e3ef6461c0b0f91",
                        "id_product": "609330b0642b8120248dd5fc",
                        "id_supermarket": "60845d5468c33834de710e19",
                        "price": 2.94,
                        "date": "1620248400000"
                      },
                      {
                        "_id": "6095a5064e3ef6461c0b0f91",
                        "id_product": "609330b0642b8120248dd5fc",
                        "id_supermarket": "60845d5468c33834de710e19",
                        "price": 2.94,
                        "date": "1620248400000"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          }
        },
        "operationId": "get-prices",
        "parameters": [],
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "",
                "minItems": 1,
                "uniqueItems": true,
                "x-examples": {
                  "example-1": [
                    "1",
                    "2",
                    "3"
                  ]
                },
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "HealthCheckResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Application running at: 8082"
          },
          "healthy": {
            "type": "boolean",
            "example": true
          },
          "services": {
            "type": "object",
            "additionalProperties": {
              "description": "A map of services, where the keys correspond to service names, and the value to it's health",
              "type": "boolean",
              "example": true
            }
          }
        }
      }
    },
    "parameters": {},
    "responses": {
      "ForbiddenError": {
        "description": "Não possui permissão de acesso ao recurso",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFoundError": {
        "description": "Recurso não encontrado",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Erro interno no servidor",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ServiceError": {
        "description": "Erro de serviço",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadRequestError": {
        "description": "Erro de requisição mal formada",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}
